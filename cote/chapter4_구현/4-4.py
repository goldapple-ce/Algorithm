# 현민이는 게임 캐릭터가 맵 안에서 움직이는 시스템을 개발 중이다.
# 캐릭터가 있는 장소는 1 * 1 크기의 정사각형으로 이뤄지는 N * M 크기의 직사각형으로, 각각의 칸은 육지 또는 바다이다.
# 맵의 각 칸은 (A,B)로 나타낼 수 있고, A는 북쪽으로부터 떨어진 칸의 개수, B는 서쪽으로부터 떨어진 칸의 개수이다.
# 캐릭터의 움직임을 설정하기 위해 정해 놓은 맨얼은 이러하다.

# 1. 현재 위치에서 현재 방향을 기준으로 왼쪽 방향부터 차례대로 갈 곳을 정한다.
# 2. 캐릭터의 바로 왼쪽 방향에 아직 가보지 않은  칸이 존재한다면, 왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진한다.
#     왼쪽 방향에 가보지 않은 칸이 없다면 왼쪽 방향으로 회전만 수행하고 1단계로 돌아간다.
# 3.만약 네 방향 모두 이미 가본 칸이거나 바다로 되어 있는 칸인 경우에는, 바라보는 방향을 유지한 채로 한 칸 뒤로 가고 1단계로 돌아간다.
#     단, 이때 뒤쪽 방향이 바다인 칸이라 뒤로 갈 수 없는 경우에는 움직임을 멈춘다.
# 매뉴얼에 따라 캐릭터를 이동시킨 뒤에, 캐릭터가 방문한 칸의 수를 출력하는 프로그램을 만드시오.

# 입력 조건
# 첫째 줄에 맵의 세로 크기 N과 가로 크기 M을 공백으로 구분하여 입력한다.
# 둘째 줄에 게임 캐릭터가 있는 칸의 좌표 (A,B)와 바라보는 방향 d가 각각 서로 공백으로 구분하여 주어진다.
# 방향 d의 값으로는 다음과 같이 4가지가 존재한다.
# -0 : 북쪽
# -1 : 동쪽
# -2 : 남쪽
# -3 : 서쪽
# 셋째 줄부터 맵이 육지인지 바다인지에 대한 정보가 주어진다.
# N개의 줄에 맵의 상태가 북쪽부터 남쪽 순서대로, 각 줄의 데이터는 서쪽부터 동쪽 순서대로 주어진다.
# -0 : 육지
# -1 : 바다

# 출력 조건
# 첫째 줄에 이동을 마친 후 캐릭터가 방문한 칸의 수를 출력한다.
N, M = map(int, input().split())
A, B, dir = map(int, input().split())
map_table = [list(map(int, input().split())) for _ in range(N)]
dir_type = {0: (-1, 0), 1: (0, 1), 2: (1, 0), 3: (0, -1)}
cnt, turn_time = 1, 0
end = False


def turn_left():
    global dir
    dir -= 1
    if dir == -1:
        dir = 3


while not end:
    turn_left()

    if map_table[B+dir_type[dir][0]][A+dir_type[dir][1]] == 0:
        map_table[B+dir_type[dir][0]][A+dir_type[dir][1]] = 1
        A += dir_type[dir][1]
        B += dir_type[dir][0]
        cnt += 1
        turn_time = 0
    else:
        turn_time += 1

    if turn_time == 4:
        if map_table[B-dir_type[dir][0]][A-dir_type[dir][1]] == 0:
            A -= dir_type[dir][1]
            B -= dir_type[dir][0]
        else:
            end = True
            break
        turn_time = 0

print(cnt)
